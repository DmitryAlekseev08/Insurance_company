Using CATALINA_BASE:   "C:\Users\adale\.IntelliJIdea2019.3\system\tomcat\Tomcat_9_0_33_Coursework_2"
Using CATALINA_HOME:   "A:\3 ™„‡·\Ç‚Æ‡Æ© ·•¨•·‚‡\ìØ‡†¢´•≠®• §†≠≠Î¨®\ã†°Æ‡†‚Æ‡≠†Ô ‡†°Æ‚† ¸3\apache-tomcat-9.0.33"
Using CATALINA_TMPDIR: "A:\3 ™„‡·\Ç‚Æ‡Æ© ·•¨•·‚‡\ìØ‡†¢´•≠®• §†≠≠Î¨®\ã†°Æ‡†‚Æ‡≠†Ô ‡†°Æ‚† ¸3\apache-tomcat-9.0.33\temp"
Using JRE_HOME:        "C:\Program Files\Java\jdk1.8.0_241"
Using CLASSPATH:       "A:\3 ™„‡·\Ç‚Æ‡Æ© ·•¨•·‚‡\ìØ‡†¢´•≠®• §†≠≠Î¨®\ã†°Æ‡†‚Æ‡≠†Ô ‡†°Æ‚† ¸3\apache-tomcat-9.0.33\bin\bootstrap.jar;A:\3 ™„‡·\Ç‚Æ‡Æ© ·•¨•·‚‡\ìØ‡†¢´•≠®• §†≠≠Î¨®\ã†°Æ‡†‚Æ‡≠†Ô ‡†°Æ‚† ¸3\apache-tomcat-9.0.33\bin\tomcat-juli.jar"
07-May-2020 15:42:13.548 WARNING [main] org.apache.catalina.startup.ClassLoaderFactory.validateFile Problem with directory [A:\3 √™√≥√∞√±\√Ç√≤√Æ√∞√Æ√© √±√•√¨√•√±√≤√∞\√ì√Ø√∞√†√¢√´√•√≠√®√• √§√†√≠√≠√ª√¨√®\√ã√†√°√Æ√∞√†√≤√Æ√∞√≠√†√ø √∞√†√°√Æ√≤√† ¬π3\apache-tomcat-9.0.33\lib], exists: [false], isDirectory: [false], canRead: [false]
07-May-2020 15:42:13.552 WARNING [main] org.apache.catalina.startup.ClassLoaderFactory.validateFile Problem with directory [A:\3 √™√≥√∞√±\√Ç√≤√Æ√∞√Æ√© √±√•√¨√•√±√≤√∞\√ì√Ø√∞√†√¢√´√•√≠√®√• √§√†√≠√≠√ª√¨√®\√ã√†√°√Æ√∞√†√≤√Æ√∞√≠√†√ø √∞√†√°√Æ√≤√† ¬π3\apache-tomcat-9.0.33\lib], exists: [false], isDirectory: [false], canRead: [false]
07-May-2020 15:42:13.982 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.33
07-May-2020 15:42:13.983 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Mar 11 2020 09:31:38 UTC
07-May-2020 15:42:13.983 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.33.0
07-May-2020 15:42:13.983 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
07-May-2020 15:42:13.983 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
07-May-2020 15:42:13.983 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
07-May-2020 15:42:13.984 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk1.8.0_241\jre
07-May-2020 15:42:13.984 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_241-b07
07-May-2020 15:42:13.984 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
07-May-2020 15:42:13.984 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\adale\.IntelliJIdea2019.3\system\tomcat\Tomcat_9_0_33_Coursework_2
07-May-2020 15:42:13.984 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         A:\3 –∫—É—Ä—Å\–í—Ç–æ—Ä–æ–π —Å–µ–º–µ—Å—Ç—Ä\–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏\–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ3\apache-tomcat-9.0.33
07-May-2020 15:42:13.985 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=C:\Users\adale\.IntelliJIdea2019.3\system\tomcat\Tomcat_9_0_33_Coursework_2\conf\logging.properties
07-May-2020 15:42:13.985 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
07-May-2020 15:42:13.986 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcom.sun.management.jmxremote=
07-May-2020 15:42:13.986 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcom.sun.management.jmxremote.port=1099
07-May-2020 15:42:13.986 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcom.sun.management.jmxremote.ssl=false
07-May-2020 15:42:13.986 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcom.sun.management.jmxremote.password.file=C:\Users\adale\.IntelliJIdea2019.3\system\tomcat\Tomcat_9_0_33_Coursework_2\jmxremote.password
07-May-2020 15:42:13.986 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcom.sun.management.jmxremote.access.file=C:\Users\adale\.IntelliJIdea2019.3\system\tomcat\Tomcat_9_0_33_Coursework_2\jmxremote.access
07-May-2020 15:42:13.986 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.rmi.server.hostname=127.0.0.1
07-May-2020 15:42:13.986 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
07-May-2020 15:42:13.987 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
07-May-2020 15:42:13.987 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
07-May-2020 15:42:13.987 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=C:\Users\adale\.IntelliJIdea2019.3\system\tomcat\Tomcat_9_0_33_Coursework_2
07-May-2020 15:42:13.987 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=A:\3 –∫—É—Ä—Å\–í—Ç–æ—Ä–æ–π —Å–µ–º–µ—Å—Ç—Ä\–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏\–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ3\apache-tomcat-9.0.33
07-May-2020 15:42:13.987 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=A:\3 –∫—É—Ä—Å\–í—Ç–æ—Ä–æ–π —Å–µ–º–µ—Å—Ç—Ä\–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏\–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ3\apache-tomcat-9.0.33\temp
07-May-2020 15:42:13.988 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded APR based Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
07-May-2020 15:42:13.988 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
07-May-2020 15:42:13.988 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
07-May-2020 15:42:13.994 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
07-May-2020 15:42:14.431 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
07-May-2020 15:42:14.465 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [844] milliseconds
07-May-2020 15:42:14.514 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
07-May-2020 15:42:14.515 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.33]
07-May-2020 15:42:14.531 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
07-May-2020 15:42:14.545 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [78] milliseconds
Connected to server
07-May-2020 15:42:17.839 INFO [RMI TCP Connection(3)-127.0.0.1] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
log4j:ERROR Could not parse url [file:/A:/3%20ÍÛÒ/¬ÚÓÓÈ%20ÒÂÏÂÒÚ/”Ô‡‚ÎÂÌËÂ%20‰‡ÌÌ˚ÏË/À‡·Ó‡ÚÓÌ‡ˇ%20‡·ÓÚ‡%20π3/ ÛÒÓ‚‡ˇ%20‡·ÓÚ‡/out/artifacts/Coursework_war_exploded/WEB-INF/classes/log4j.xml].
com.sun.org.apache.xerces.internal.util.URI$MalformedURIException: Path contains invalid character: Í
	at com.sun.org.apache.xerces.internal.util.URI.initializePath(URI.java:1109)
	at com.sun.org.apache.xerces.internal.util.URI.initialize(URI.java:582)
	at com.sun.org.apache.xerces.internal.util.URI.<init>(URI.java:335)
	at com.sun.org.apache.xerces.internal.util.URI.<init>(URI.java:298)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.expandSystemIdStrictOff1(XMLEntityManager.java:2221)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.expandSystemId(XMLEntityManager.java:2053)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.resolveEntityAsPerStax(XMLEntityManager.java:968)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDriver.dispatch(XMLDocumentScannerImpl.java:1151)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$DTDDriver.next(XMLDocumentScannerImpl.java:1045)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:959)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:842)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:771)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:339)
	at org.apache.log4j.xml.DOMConfigurator$2.parse(DOMConfigurator.java:769)
	at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java:871)
	at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java:778)
	at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)
	at org.apache.log4j.LogManager.<clinit>(LogManager.java:127)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.jboss.logging.LoggerProviders.tryLog4j(LoggerProviders.java:95)
	at org.jboss.logging.LoggerProviders.findProvider(LoggerProviders.java:72)
	at org.jboss.logging.LoggerProviders.find(LoggerProviders.java:35)
	at org.jboss.logging.LoggerProviders.<clinit>(LoggerProviders.java:32)
	at org.jboss.logging.Logger.getLogger(Logger.java:2163)
	at org.jboss.logging.Logger.getMessageLogger(Logger.java:2259)
	at org.jboss.logging.Logger.getMessageLogger(Logger.java:2214)
	at org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:324)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1612)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:684)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:658)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:624)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:672)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:543)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:484)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:136)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1134)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1089)
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:983)
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4876)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5185)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:717)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:690)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:705)
	at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1728)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:289)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:456)
	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:405)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:289)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at com.sun.jmx.remote.security.MBeanServerAccessController.invoke(MBeanServerAccessController.java:468)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1468)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1309)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1408)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:357)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:573)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:834)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:688)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:687)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
log4j:WARN No appenders could be found for logger (org.jboss.logging).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
07-May-2020 15:42:24.536 INFO [Catalina-utility-2] org.apache.catalina.startup.HostConfig.deployDirectory –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–± –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫—É [A:\3 –∫—É—Ä—Å\–í—Ç–æ—Ä–æ–π —Å–µ–º–µ—Å—Ç—Ä\–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏\–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ3\apache-tomcat-9.0.33\webapps\manager]
07-May-2020 15:42:24.648 INFO [Catalina-utility-2] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [A:\3 –∫—É—Ä—Å\–í—Ç–æ—Ä–æ–π —Å–µ–º–µ—Å—Ç—Ä\–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏\–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ3\apache-tomcat-9.0.33\webapps\manager] has finished in [113] ms
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:42:33.445 INFO [http-nio-8080-exec-6] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =140, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2011-11-11', dateOut ='2012-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='Romashov', Firstname ='Evgeniy', MiddleName ='Dmitrievich', Phone ='+7 (909) 454-51-60', Email ='romashka5@yandex.ru', InsurancePercent ='0.26'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
07-May-2020 15:42:33.446 INFO [http-nio-8080-exec-6] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =4, LastName ='Ivanova', FirstName ='Olga', MiddleName ='Yuryevna', Phone ='+7 (927) 172-61-32', Email ='GolodecOU@yandex.ru'}'}
07-May-2020 15:42:33.446 INFO [http-nio-8080-exec-6] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
Hibernate: select insuranÒÂ_0_.id as id1_4_3_, insuranÒÂ_0_.id_agent as id_agent8_4_3_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_3_, insuranÒÂ_0_.date_in as date_in2_4_3_, insuranÒÂ_0_.date_out as date_out3_4_3_, insuranÒÂ_0_.insurance_amount as insuranc4_4_3_, insuranÒÂ_0_.insurance_premium as insuranc5_4_3_, insuranÒÂ_0_.id_insurant as id_insu10_4_3_, insuranÒÂ_0_.object_insurance as object_i6_4_3_, insuranÒÂ_0_.series_and_number as series_a7_4_3_, insurance_1_.id as id1_1_0_, insurance_1_.email as email2_1_0_, insurance_1_.first_name as first_na3_1_0_, insurance_1_.last_name as last_nam4_1_0_, insurance_1_.middle_name as middle_n5_1_0_, insurance_1_.insurance_percent as insuranc6_1_0_, insurance_1_.phone as phone7_1_0_, beneficiar2_.id as id1_0_1_, beneficiar2_.email as email2_0_1_, beneficiar2_.first_name as first_na3_0_1_, beneficiar2_.last_name as last_nam4_0_1_, beneficiar2_.middle_name as middle_n5_0_1_, beneficiar2_.phone as phone6_0_1_, insurant3_.id as id1_3_2_, insurant3_.email as email2_3_2_, insurant3_.first_name as first_na3_3_2_, insurant3_.last_name as last_nam4_3_2_, insurant3_.middle_name as middle_n5_3_2_, insurant3_.phone as phone6_3_2_ from insuranÒe_policies insuranÒÂ_0_ left outer join insurance_agents insurance_1_ on insuranÒÂ_0_.id_agent=insurance_1_.id left outer join beneficiaries beneficiar2_ on insuranÒÂ_0_.id_beneficiary=beneficiar2_.id left outer join insurants insurant3_ on insuranÒÂ_0_.id_insurant=insurant3_.id where insuranÒÂ_0_.id=?
07-May-2020 15:43:06.099 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.getPolicyId Policy successfully loaded. Policy details: Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =4, LastName ='Ivanova', FirstName ='Olga', MiddleName ='Yuryevna', Phone ='+7 (927) 172-61-32', Email ='GolodecOU@yandex.ru'}'}
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:43:06.266 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =140, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2011-11-11', dateOut ='2012-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='Romashov', Firstname ='Evgeniy', MiddleName ='Dmitrievich', Phone ='+7 (909) 454-51-60', Email ='romashka5@yandex.ru', InsurancePercent ='0.26'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
07-May-2020 15:43:06.266 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =4, LastName ='Ivanova', FirstName ='Olga', MiddleName ='Yuryevna', Phone ='+7 (927) 172-61-32', Email ='GolodecOU@yandex.ru'}'}
07-May-2020 15:43:06.267 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
07-May-2020 15:43:12.923 INFO [http-nio-8080-exec-10] com.policy.dao.PolicyDao.updatePolicy Policy successfully update. Policy details: Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='null', Firstname ='null', MiddleName ='null', Phone ='null', Email ='null', InsurancePercent ='null'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}'}
Hibernate: update insuranÒe_policies set id_agent=?, id_beneficiary=?, date_in=?, date_out=?, insurance_amount=?, insurance_premium=?, id_insurant=?, object_insurance=?, series_and_number=? where id=?
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:43:13.204 INFO [http-nio-8080-exec-1] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =140, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2011-11-11', dateOut ='2012-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='Romashov', Firstname ='Evgeniy', MiddleName ='Dmitrievich', Phone ='+7 (909) 454-51-60', Email ='romashka5@yandex.ru', InsurancePercent ='0.26'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
07-May-2020 15:43:13.205 INFO [http-nio-8080-exec-1] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:43:13.205 INFO [http-nio-8080-exec-1] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
Hibernate: select insuranÒÂ_0_.id as id1_4_3_, insuranÒÂ_0_.id_agent as id_agent8_4_3_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_3_, insuranÒÂ_0_.date_in as date_in2_4_3_, insuranÒÂ_0_.date_out as date_out3_4_3_, insuranÒÂ_0_.insurance_amount as insuranc4_4_3_, insuranÒÂ_0_.insurance_premium as insuranc5_4_3_, insuranÒÂ_0_.id_insurant as id_insu10_4_3_, insuranÒÂ_0_.object_insurance as object_i6_4_3_, insuranÒÂ_0_.series_and_number as series_a7_4_3_, insurance_1_.id as id1_1_0_, insurance_1_.email as email2_1_0_, insurance_1_.first_name as first_na3_1_0_, insurance_1_.last_name as last_nam4_1_0_, insurance_1_.middle_name as middle_n5_1_0_, insurance_1_.insurance_percent as insuranc6_1_0_, insurance_1_.phone as phone7_1_0_, beneficiar2_.id as id1_0_1_, beneficiar2_.email as email2_0_1_, beneficiar2_.first_name as first_na3_0_1_, beneficiar2_.last_name as last_nam4_0_1_, beneficiar2_.middle_name as middle_n5_0_1_, beneficiar2_.phone as phone6_0_1_, insurant3_.id as id1_3_2_, insurant3_.email as email2_3_2_, insurant3_.first_name as first_na3_3_2_, insurant3_.last_name as last_nam4_3_2_, insurant3_.middle_name as middle_n5_3_2_, insurant3_.phone as phone6_3_2_ from insuranÒe_policies insuranÒÂ_0_ left outer join insurance_agents insurance_1_ on insuranÒÂ_0_.id_agent=insurance_1_.id left outer join beneficiaries beneficiar2_ on insuranÒÂ_0_.id_beneficiary=beneficiar2_.id left outer join insurants insurant3_ on insuranÒÂ_0_.id_insurant=insurant3_.id where insuranÒÂ_0_.id=?
07-May-2020 15:43:56.813 INFO [http-nio-8080-exec-4] com.policy.dao.PolicyDao.getPolicyId Policy successfully loaded. Policy details: Insurance policy{Id =140, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2011-11-11', dateOut ='2012-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='Romashov', Firstname ='Evgeniy', MiddleName ='Dmitrievich', Phone ='+7 (909) 454-51-60', Email ='romashka5@yandex.ru', InsurancePercent ='0.26'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:43:56.982 INFO [http-nio-8080-exec-4] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =140, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2011-11-11', dateOut ='2012-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='Romashov', Firstname ='Evgeniy', MiddleName ='Dmitrievich', Phone ='+7 (909) 454-51-60', Email ='romashka5@yandex.ru', InsurancePercent ='0.26'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
07-May-2020 15:43:56.982 INFO [http-nio-8080-exec-4] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:43:56.982 INFO [http-nio-8080-exec-4] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
07-May-2020 15:44:08.895 INFO [http-nio-8080-exec-5] com.policy.dao.PolicyDao.updatePolicy Policy successfully update. Policy details: Insurance policy{Id =140, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2011-11-11', dateOut ='2012-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='null', Firstname ='null', MiddleName ='null', Phone ='null', Email ='null', InsurancePercent ='null'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}', IdBeneficiary ='Beneficiary{IdBeneficiary =4, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}'}
Hibernate: update insuranÒe_policies set id_agent=?, id_beneficiary=?, date_in=?, date_out=?, insurance_amount=?, insurance_premium=?, id_insurant=?, object_insurance=?, series_and_number=? where id=?
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
07-May-2020 15:44:09.073 INFO [http-nio-8080-exec-7] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:44:09.074 INFO [http-nio-8080-exec-7] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =140, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2011-11-11', dateOut ='2012-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='Romashov', Firstname ='Evgeniy', MiddleName ='Dmitrievich', Phone ='+7 (909) 454-51-60', Email ='romashka5@yandex.ru', InsurancePercent ='0.26'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =4, LastName ='Ivanova', FirstName ='Olga', MiddleName ='Yuryevna', Phone ='+7 (927) 172-61-32', Email ='GolodecOU@yandex.ru'}'}
07-May-2020 15:44:09.074 INFO [http-nio-8080-exec-7] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
07-May-2020 15:44:17.814 INFO [http-nio-8080-exec-9] com.beneficiary.dao.BeneficiaryDao.listBeneficiary Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}
07-May-2020 15:44:17.815 INFO [http-nio-8080-exec-9] com.beneficiary.dao.BeneficiaryDao.listBeneficiary Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}
07-May-2020 15:44:17.815 INFO [http-nio-8080-exec-9] com.beneficiary.dao.BeneficiaryDao.listBeneficiary Beneficiary{IdBeneficiary =4, LastName ='Ivanova', FirstName ='Olga', MiddleName ='Yuryevna', Phone ='+7 (927) 172-61-32', Email ='GolodecOU@yandex.ru'}
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
07-May-2020 15:44:21.892 INFO [http-nio-8080-exec-1] com.beneficiary.dao.BeneficiaryDao.removeBeneficiary Beneficiary successfully removed. Beneficiary details: Beneficiary{IdBeneficiary =4, LastName ='Ivanova', FirstName ='Olga', MiddleName ='Yuryevna', Phone ='+7 (927) 172-61-32', Email ='GolodecOU@yandex.ru'}
Hibernate: delete from beneficiaries where id=?
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
07-May-2020 15:44:22.016 INFO [http-nio-8080-exec-2] com.beneficiary.dao.BeneficiaryDao.listBeneficiary Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}
07-May-2020 15:44:22.017 INFO [http-nio-8080-exec-2] com.beneficiary.dao.BeneficiaryDao.listBeneficiary Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:44:25.248 INFO [http-nio-8080-exec-4] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:44:25.248 INFO [http-nio-8080-exec-4] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
Hibernate: select nextval ('insuranÒe_policies_id_seq')
07-May-2020 15:44:51.612 INFO [http-nio-8080-exec-7] com.policy.dao.PolicyDao.addPolicy Policy successfully saved. Policy details: Insurance policy{Id =370, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2002-11-11', dateOut ='2003-11-11', IdAgent ='Insurance agent{IdAgent =140, LastName ='null', Firstname ='null', MiddleName ='null', Phone ='null', Email ='null', InsurancePercent ='null'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}'}
Hibernate: insert into insuranÒe_policies (id_agent, id_beneficiary, date_in, date_out, insurance_amount, insurance_premium, id_insurant, object_insurance, series_and_number, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
07-May-2020 15:44:51.814 INFO [http-nio-8080-exec-8] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:44:51.815 INFO [http-nio-8080-exec-8] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =370, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2002-11-11', dateOut ='2003-11-11', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:44:51.815 INFO [http-nio-8080-exec-8] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
Hibernate: select insuranÒÂ_0_.id as id1_4_3_, insuranÒÂ_0_.id_agent as id_agent8_4_3_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_3_, insuranÒÂ_0_.date_in as date_in2_4_3_, insuranÒÂ_0_.date_out as date_out3_4_3_, insuranÒÂ_0_.insurance_amount as insuranc4_4_3_, insuranÒÂ_0_.insurance_premium as insuranc5_4_3_, insuranÒÂ_0_.id_insurant as id_insu10_4_3_, insuranÒÂ_0_.object_insurance as object_i6_4_3_, insuranÒÂ_0_.series_and_number as series_a7_4_3_, insurance_1_.id as id1_1_0_, insurance_1_.email as email2_1_0_, insurance_1_.first_name as first_na3_1_0_, insurance_1_.last_name as last_nam4_1_0_, insurance_1_.middle_name as middle_n5_1_0_, insurance_1_.insurance_percent as insuranc6_1_0_, insurance_1_.phone as phone7_1_0_, beneficiar2_.id as id1_0_1_, beneficiar2_.email as email2_0_1_, beneficiar2_.first_name as first_na3_0_1_, beneficiar2_.last_name as last_nam4_0_1_, beneficiar2_.middle_name as middle_n5_0_1_, beneficiar2_.phone as phone6_0_1_, insurant3_.id as id1_3_2_, insurant3_.email as email2_3_2_, insurant3_.first_name as first_na3_3_2_, insurant3_.last_name as last_nam4_3_2_, insurant3_.middle_name as middle_n5_3_2_, insurant3_.phone as phone6_3_2_ from insuranÒe_policies insuranÒÂ_0_ left outer join insurance_agents insurance_1_ on insuranÒÂ_0_.id_agent=insurance_1_.id left outer join beneficiaries beneficiar2_ on insuranÒÂ_0_.id_beneficiary=beneficiar2_.id left outer join insurants insurant3_ on insuranÒÂ_0_.id_insurant=insurant3_.id where insuranÒÂ_0_.id=?
07-May-2020 15:44:55.552 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.getPolicyId Policy successfully loaded. Policy details: Insurance policy{Id =370, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2002-11-11', dateOut ='2003-11-11', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:44:55.716 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:44:55.716 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =370, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2002-11-11', dateOut ='2003-11-11', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:44:55.717 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
Hibernate: update insuranÒe_policies set id_agent=?, id_beneficiary=?, date_in=?, date_out=?, insurance_amount=?, insurance_premium=?, id_insurant=?, object_insurance=?, series_and_number=? where id=?
07-May-2020 15:44:58.977 INFO [http-nio-8080-exec-10] com.policy.dao.PolicyDao.updatePolicy Policy successfully update. Policy details: Insurance policy{Id =370, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2002-11-11', dateOut ='2003-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='null', Firstname ='null', MiddleName ='null', Phone ='null', Email ='null', InsurancePercent ='null'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}'}
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:44:59.175 INFO [http-nio-8080-exec-1] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:44:59.175 INFO [http-nio-8080-exec-1] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =370, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2002-11-11', dateOut ='2003-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='Romashov', Firstname ='Evgeniy', MiddleName ='Dmitrievich', Phone ='+7 (909) 454-51-60', Email ='romashka5@yandex.ru', InsurancePercent ='0.26'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:44:59.176 INFO [http-nio-8080-exec-1] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
Hibernate: insert into insuranÒe_policies (id_agent, id_beneficiary, date_in, date_out, insurance_amount, insurance_premium, id_insurant, object_insurance, series_and_number, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
07-May-2020 15:45:25.914 INFO [http-nio-8080-exec-4] com.policy.dao.PolicyDao.addPolicy Policy successfully saved. Policy details: Insurance policy{Id =371, seriesNumber ='1234567890', objectInsurance ='svsdv', insuranceAmount ='155', insurancePremium ='452', dateIn ='2002-02-21', dateOut ='2002-04-04', IdAgent ='Insurance agent{IdAgent =140, LastName ='null', Firstname ='null', MiddleName ='null', Phone ='null', Email ='null', InsurancePercent ='null'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='null', FirstName ='null', MiddleName ='null', Phone ='null', Email ='null'}'}
Hibernate: select insuranÒÂ_0_.id as id1_4_3_, insuranÒÂ_0_.id_agent as id_agent8_4_3_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_3_, insuranÒÂ_0_.date_in as date_in2_4_3_, insuranÒÂ_0_.date_out as date_out3_4_3_, insuranÒÂ_0_.insurance_amount as insuranc4_4_3_, insuranÒÂ_0_.insurance_premium as insuranc5_4_3_, insuranÒÂ_0_.id_insurant as id_insu10_4_3_, insuranÒÂ_0_.object_insurance as object_i6_4_3_, insuranÒÂ_0_.series_and_number as series_a7_4_3_, insurance_1_.id as id1_1_0_, insurance_1_.email as email2_1_0_, insurance_1_.first_name as first_na3_1_0_, insurance_1_.last_name as last_nam4_1_0_, insurance_1_.middle_name as middle_n5_1_0_, insurance_1_.insurance_percent as insuranc6_1_0_, insurance_1_.phone as phone7_1_0_, beneficiar2_.id as id1_0_1_, beneficiar2_.email as email2_0_1_, beneficiar2_.first_name as first_na3_0_1_, beneficiar2_.last_name as last_nam4_0_1_, beneficiar2_.middle_name as middle_n5_0_1_, beneficiar2_.phone as phone6_0_1_, insurant3_.id as id1_3_2_, insurant3_.email as email2_3_2_, insurant3_.first_name as first_na3_3_2_, insurant3_.last_name as last_nam4_3_2_, insurant3_.middle_name as middle_n5_3_2_, insurant3_.phone as phone6_3_2_ from insuranÒe_policies insuranÒÂ_0_ left outer join insurance_agents insurance_1_ on insuranÒÂ_0_.id_agent=insurance_1_.id left outer join beneficiaries beneficiar2_ on insuranÒÂ_0_.id_beneficiary=beneficiar2_.id left outer join insurants insurant3_ on insuranÒÂ_0_.id_insurant=insurant3_.id where insuranÒÂ_0_.id=?
Hibernate: delete from insuranÒe_policies where id=?
07-May-2020 15:46:49.107 INFO [http-nio-8080-exec-8] com.policy.dao.PolicyDao.removePolicy Policy successfully removed. Policy details: Insurance policy{Id =370, seriesNumber ='1234567890', objectInsurance ='Flat', insuranceAmount ='10000', insurancePremium ='1000', dateIn ='2002-11-11', dateOut ='2003-11-11', IdAgent ='Insurance agent{IdAgent =1, LastName ='Romashov', Firstname ='Evgeniy', MiddleName ='Dmitrievich', Phone ='+7 (909) 454-51-60', Email ='romashka5@yandex.ru', InsurancePercent ='0.26'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
Hibernate: select insuranÒÂ_0_.id as id1_4_, insuranÒÂ_0_.id_agent as id_agent8_4_, insuranÒÂ_0_.id_beneficiary as id_benef9_4_, insuranÒÂ_0_.date_in as date_in2_4_, insuranÒÂ_0_.date_out as date_out3_4_, insuranÒÂ_0_.insurance_amount as insuranc4_4_, insuranÒÂ_0_.insurance_premium as insuranc5_4_, insuranÒÂ_0_.id_insurant as id_insu10_4_, insuranÒÂ_0_.object_insurance as object_i6_4_, insuranÒÂ_0_.series_and_number as series_a7_4_ from insuranÒe_policies insuranÒÂ_0_
Hibernate: select insurance_0_.id as id1_1_0_, insurance_0_.email as email2_1_0_, insurance_0_.first_name as first_na3_1_0_, insurance_0_.last_name as last_nam4_1_0_, insurance_0_.middle_name as middle_n5_1_0_, insurance_0_.insurance_percent as insuranc6_1_0_, insurance_0_.phone as phone7_1_0_ from insurance_agents insurance_0_ where insurance_0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
Hibernate: select beneficiar0_.id as id1_0_0_, beneficiar0_.email as email2_0_0_, beneficiar0_.first_name as first_na3_0_0_, beneficiar0_.last_name as last_nam4_0_0_, beneficiar0_.middle_name as middle_n5_0_0_, beneficiar0_.phone as phone6_0_0_ from beneficiaries beneficiar0_ where beneficiar0_.id=?
Hibernate: select insurant0_.id as id1_3_0_, insurant0_.email as email2_3_0_, insurant0_.first_name as first_na3_3_0_, insurant0_.last_name as last_nam4_3_0_, insurant0_.middle_name as middle_n5_3_0_, insurant0_.phone as phone6_3_0_ from insurants insurant0_ where insurant0_.id=?
07-May-2020 15:46:49.337 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =50, seriesNumber ='0456489461', objectInsurance ='Flat', insuranceAmount ='500000', insurancePremium ='10000', dateIn ='2017-02-26', dateOut ='2018-08-26', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =661, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =3, LastName ='Trutnev', FirstName ='Yuri', MiddleName ='Petrovich', Phone ='+7 (907) 802-48-87', Email ='TrutnevYP@gmail.com'}'}
07-May-2020 15:46:49.337 INFO [http-nio-8080-exec-9] com.policy.dao.PolicyDao.listPolicy Insurance policy{Id =45, seriesNumber ='0567412354', objectInsurance ='Car', insuranceAmount ='10000', insurancePremium ='500', dateIn ='2015-06-12', dateOut ='2016-06-12', IdAgent ='Insurance agent{IdAgent =140, LastName ='Resin', Firstname ='Vladimir', MiddleName ='Iosifovich', Phone ='+7 (912) 051-42-79', Email ='resinVI@yandex.ru', InsurancePercent ='0.28'}', IdInsurant ='Insurant{IdInsurant =662, LastName ='Nosik', FirstName ='Vladimir', MiddleName ='Alekseevich', Phone ='+7 (908) 876-91-82', Email ='NosikVA@yandex.ru'}', IdBeneficiary ='Beneficiary{IdBeneficiary =90, LastName ='Alihanov', FirstName ='Anton', MiddleName ='Andreevich', Phone ='+7 (910) 459-82-10', Email ='alihanovAA@mail.ru'}'}
Hibernate: select insuranÒÂ_0_.id_beneficiary as col_0_0_, beneficiar1_.last_name as col_1_0_, beneficiar1_.first_name as col_2_0_, beneficiar1_.middle_name as col_3_0_ from insuranÒe_policies insuranÒÂ_0_ cross join beneficiaries beneficiar1_ where insuranÒÂ_0_.id_beneficiary=beneficiar1_.id
Hibernate: select insurance_0_.id as id1_1_, insurance_0_.email as email2_1_, insurance_0_.first_name as first_na3_1_, insurance_0_.last_name as last_nam4_1_, insurance_0_.middle_name as middle_n5_1_, insurance_0_.insurance_percent as insuranc6_1_, insurance_0_.phone as phone7_1_ from insurance_agents insurance_0_
Hibernate: select insurant0_.id as id1_3_, insurant0_.email as email2_3_, insurant0_.first_name as first_na3_3_, insurant0_.last_name as last_nam4_3_, insurant0_.middle_name as middle_n5_3_, insurant0_.phone as phone6_3_ from insurants insurant0_
Hibernate: select beneficiar0_.id as id1_0_, beneficiar0_.email as email2_0_, beneficiar0_.first_name as first_na3_0_, beneficiar0_.last_name as last_nam4_0_, beneficiar0_.middle_name as middle_n5_0_, beneficiar0_.phone as phone6_0_ from beneficiaries beneficiar0_
Using CATALINA_BASE:   "C:\Users\adale\.IntelliJIdea2019.3\system\tomcat\Tomcat_9_0_33_Coursework_2"
Using CATALINA_HOME:   "A:\3 ™„‡·\Ç‚Æ‡Æ© ·•¨•·‚‡\ìØ‡†¢´•≠®• §†≠≠Î¨®\ã†°Æ‡†‚Æ‡≠†Ô ‡†°Æ‚† ¸3\apache-tomcat-9.0.33"
Using CATALINA_TMPDIR: "A:\3 ™„‡·\Ç‚Æ‡Æ© ·•¨•·‚‡\ìØ‡†¢´•≠®• §†≠≠Î¨®\ã†°Æ‡†‚Æ‡≠†Ô ‡†°Æ‚† ¸3\apache-tomcat-9.0.33\temp"
Using JRE_HOME:        "C:\Program Files\Java\jdk1.8.0_241"
Using CLASSPATH:       "A:\3 ™„‡·\Ç‚Æ‡Æ© ·•¨•·‚‡\ìØ‡†¢´•≠®• §†≠≠Î¨®\ã†°Æ‡†‚Æ‡≠†Ô ‡†°Æ‚† ¸3\apache-tomcat-9.0.33\bin\bootstrap.jar;A:\3 ™„‡·\Ç‚Æ‡Æ© ·•¨•·‚‡\ìØ‡†¢´•≠®• §†≠≠Î¨®\ã†°Æ‡†‚Æ‡≠†Ô ‡†°Æ‚† ¸3\apache-tomcat-9.0.33\bin\tomcat-juli.jar"
07-May-2020 15:47:00.232 WARNING [main] org.apache.catalina.startup.ClassLoaderFactory.validateFile Problem with directory [A:\3 √™√≥√∞√±\√Ç√≤√Æ√∞√Æ√© √±√•√¨√•√±√≤√∞\√ì√Ø√∞√†√¢√´√•√≠√®√• √§√†√≠√≠√ª√¨√®\√ã√†√°√Æ√∞√†√≤√Æ√∞√≠√†√ø √∞√†√°√Æ√≤√† ¬π3\apache-tomcat-9.0.33\lib], exists: [false], isDirectory: [false], canRead: [false]
07-May-2020 15:47:00.238 WARNING [main] org.apache.catalina.startup.ClassLoaderFactory.validateFile Problem with directory [A:\3 √™√≥√∞√±\√Ç√≤√Æ√∞√Æ√© √±√•√¨√•√±√≤√∞\√ì√Ø√∞√†√¢√´√•√≠√®√• √§√†√≠√≠√ª√¨√®\√ã√†√°√Æ√∞√†√≤√Æ√∞√≠√†√ø √∞√†√°√Æ√≤√† ¬π3\apache-tomcat-9.0.33\lib], exists: [false], isDirectory: [false], canRead: [false]
07-May-2020 15:47:00.558 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
07-May-2020 15:47:00.558 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
07-May-2020 15:47:01.085 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
07-May-2020 15:47:01.203 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesJdbc The web application [ROOT] registered the JDBC driver [org.postgresql.Driver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
07-May-2020 15:47:01.226 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
07-May-2020 15:47:01.228 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
Disconnected from server
